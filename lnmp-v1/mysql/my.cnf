# Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
#
# The MySQL  Server configuration file.
#
# For explanations see
# https://blog.wu06.com/2019/05/27/linux%E4%B8%8Bmysql%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6my.cnf%E8%AF%A6%E8%A7%A3/

# 服务器端配置
[mysqld]

# 监听端口
port = 3306

# 数据目录
datadir = /var/lib/mysql

# socket通信设置
socket = /var/run/mysqld/mysqld.sock

# pid文件路径
pid-file = /var/run/mysqld/mysqld.pid

# 数据库默认字符集配置
# utf8mb4编码是utf8编码的超集，兼容utf8，并且能存储4字节的表情字符
character-set-server = utf8mb4
collation-server = utf8mb4_unicode_ci

# 默认的数据库引擎
default-storage-engine = InnoDB

# 建议禁用符号链接，以防止各种安全风险；为此，取消这一行的注释
symbolic-links = 0

# sql模式设置
sql_mode = NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES

# 不使用高速缓存区来存放主机名和IP地址的对应关系。
skip-host-cache

# 禁止MySQL对外部连接进行DNS解析，使用这一选项可以消除MySQL进行DNS解析的时间。但需要注意，如果开启该选项， 则所有远程主机连接授权都要使用IP地址方式，否则MySQL将无法正常处理连接请求
skip-name-resolve

# 全局动态变量，默认3，范围：1～3
# 表示错误日志记录的信息，1：只记录error信息；2：记录error和warnings信息；3：记录error、warnings和普通的notes信息。
log_error_verbosity = 3

# 错误日志路径
log_error	= /logs/mysql_error.log

# 指定是否开启慢查询日志. 慢查询是指消耗了比 “long_query_time” 定义的更多时间的查询.如果 log_long_format 被打开,那些没有使用索引的查询也会被记录.如果你经常增加新查询到已有的系统内的话. 一般来说这是一个好主意。
slow_query_log = 1

# 参数 log_output 指定了慢查询输出的格式，默认为 FILE，你可以将它设为 TABLE，然后就可以查询 mysql 架构下的 slow_log 表了
log_output = TABLE

# 设定慢查询的阀值，超出次设定值的SQL即被记录到慢查询日志，缺省值为10s.所有的使用了比这个时间(以秒为单位)更多的查询会被认为是慢速查询.不要在这里使用”1″, 否则会导致所有的查询,甚至非常快的查询页被记录下来(由于MySQL 目前时间的精确度只能达到秒的级别)。
long_query_time =  3

# 在慢速日志中记录更多的信息.一般此项最好打开，打开此项会记录使得那些没有使用索引的查询也被作为到慢速查询附加到慢速日志里
# 打开了docker容器启动不了
###log_long_format

# 指定慢日志文件存放位置，可以为空，系统会给一个缺省的文件host_name_slow.log
#slow_query_log_file = /logs/mysql_slow_query.log 

# 将所有到达MySQL Server的SQL语句记录下来,默认关闭 
general_log = 1

# general_log路径
general_log_file =  /logs/mysql_general.log

# 命令行配置
[mysql]

default-character-set = utf8mb4

# auto-rehash
# 开启数据库tab补全

no-auto-rehash
# 关闭数据库tab补全

# 登录数据库后显示当前位置
prompt = "Welcome to Docker-MySQL [\d]> "

[mysqldump]

default-character-set = utf8mb4

# 开启快速导出，支持较大数据库的转储，在导出非常巨大的表时需要此项。增加该变量的值十分安全，这是因为仅当需要时才会分配额外内存。例如，仅当你发出长查询或mysqld必须返回大的结果行时mysqld才会分配更多内存。该变量之所以取较小默认值是一种预防措施，以捕获客户端和服务器之间的错误信息包，并确保不会因偶然使用大的信息包而导致内存溢出。 如果你正是用大的BLOB值，而且未为mysqld授予为处理查询而访问足够内存的权限，也会遇到与大信息包有关的奇怪问题。如果怀疑出现了该情况，请尝试在mysqld_safe脚本开始增加ulimit -d 256000，并重启mysqld。
quick

# Quote identifiers within backtick characters
quote-names

# 服务所能处理的请求包的最大大小以及服务所能处理的最大的请求大小(当与大的BLOB 字段一起工作时相当必要)， 每个连接独立的大小.大小动态增加。 设置最大包,限制server接受的数据包大小，避免超长SQL的执行有问题 默认值为16M，当MySQL客户端或mysqld服务器收到大于 max_allowed_packet 字节的信息包时，将发出“信息包过大”错误，并关闭连接。对于某些客户端，如果通信信息包过大，在执行查询期间，可能会遇到“丢失与 MySQL 服务器的连接”错误。默认值 16M。
max_allowed_packet	= 16M
